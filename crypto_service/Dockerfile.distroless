# Ultra-minimal distroless build for maximum security and minimal size
FROM python:3.13-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    g++ \
    gcc \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /code

# Copy requirements and install Python dependencies
COPY crypto_service/requirements.txt /code/crypto_service/requirements.txt
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir --user -r /code/crypto_service/requirements.txt

# Runtime stage - distroless base image (no shell, no package manager)
FROM gcr.io/distroless/python3-debian12:v0.2.0

# Create non-root user for security
USER 1001:1001

# Copy Python packages from builder stage
COPY --from=builder /root/.local /app/.local

# Copy application code (only necessary files)
COPY crypto_service/ /app/crypto_service/
COPY common/ /app/common/
COPY run.py /app/

# Set environment variables
ENV PATH=/app/.local/bin:$PATH
ENV PYTHONPATH=/app

# Expose port
EXPOSE 8001

# Use exec form for better signal handling
CMD ["uvicorn", "crypto_service.app.main:app", "--host", "0.0.0.0", "--port", "8001", "--workers", "1"]
